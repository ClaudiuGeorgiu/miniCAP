name: Ubuntu

on:
  push:
  pull_request:

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10', '3.11', '3.12' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ./requirements.test.txt

      - name: Run tests
        run: |
          pytest --verbose --cov=./ --cov-report xml

      - name: Upload tests coverage to Codacy
        if: contains(github.event_name, 'pull_request') == false
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          language: Python
          coverage-reports: coverage.xml

      - name: Upload tests coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

  publish:
    # Run only if the previous job succeeds (only master branch or new tags, no pull requests).
    if: (endsWith(github.ref, '/master') || startsWith(github.ref, 'refs/tags/v')) && contains(github.event_name, 'pull_request') == false
    needs: test
    name: Push updated version to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: claudiugeorgiu
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: claudiugeorgiu/minicap
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
